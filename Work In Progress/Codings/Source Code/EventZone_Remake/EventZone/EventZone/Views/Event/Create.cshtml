@using System.Web.UI.WebControls
@model EventZone.Models.CreateEventModel
@{
    ViewBag.Title = "Add Live Stream";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var ListPrivacy = new List<ListItem>
    {
        new ListItem {Text = "Public", Value = "0"},
        new ListItem {Text = "Unlisted", Value = "1"},
        new ListItem {Text = "Private", Value = "2"}
    };
}
<link href="https://netdna.bootstrapcdn.com/font-awesome/3.0.2/css/font-awesome.css" rel="stylesheet">
<script src="~/Scripts/Event/moment.js"></script>
<link href="~/Content/Event/bootstrap-datetimepicker.min.css" rel="stylesheet"/>
<link href="~/Content/Event/jquery.m.flip.css" rel="stylesheet"/>
<link href="~/Content/Event/m.flip.css" rel="stylesheet"/>
<!-- myCSS -->
<link href="~/Content/Event/Create.css" rel="stylesheet"/>
<div class="container b">
<div class="col-xs-12 col-sm-12 col-lg-12 d_leftside b">
<!-- Khung Đăng ký sự kiện -->
<div class="widget" id="widget_tabs">
<ul class="nav nav-tabs" id="myTab">
    <li id="i_first_tab" class="active">
        <a href="#i_info_tab" data-toggle="tab">Event Info</a>
    </li>
</ul>
<div class="tab-content">
<!-- Khung chứa Thông tin cơ bản & Description -->
<div class="tab-pane active" id="i_info_tab">
@using (Html.BeginForm("CreateEvent", "Event", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
    <div class="row b">
        <!-- row Thumbnail -->
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
            Thumbnail
        </div>
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 d_thumb b" id="imageView">
            <img src="~/img/upload.png">
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 b">
            <div class="fileUpload btn btn-primary">
                <span>Browse File</span>
                <input name="file" type="file" class="upload" id="image-upload-btn" />
            </div>
        </div>
    </div>
    <div class="row b">
        <!-- row Title -->
        @Html.LabelFor(model => model.Title, new {@class = "col-xs-2 col-sm-2 col-md-2 col-lg-2 b"})
        <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 b">
            @Html.TextBoxFor(model => model.Title, new {@class = "form-control", @style = "width:100%"})
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>
    <div class="row b">
        <!-- row Date Time -->
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
            Date & Time
        </div>
        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 b">
            <div class="form-group">
                <div class="input-group date" id="dtpStartTime" style="z-index: 2">
                    @Html.TextBoxFor(model => model.StartTime, new {@type = "text", @class = "form-control", @placeholder = "from", @id = "i_start_time"})
                    <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
        </div>
        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 b">
            <div class="form-group">
                <div class="input-group date" id="dtpEndTime" style="z-index: 2">
                    @Html.TextBoxFor(model => model.EndTime, new {@type = "text", @class = "form-control", @placeholder = "to", @id = "i_end_time"})
                    <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
        </div>
    </div>
    <div class="row b">
        <!-- row Category -->
        @Html.LabelFor(model => model.CategoryID, new {@class = "col-xs-2 col-sm-2 col-md-2 col-lg-2 b"})
        <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 b">
            @Html.DropDownList("CategoryId", null, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.CategoryID)
        </div>
    </div>
    <div class="row b" id="LocationDiv">
        <div id="LocationInput">
            <div id="wrapper">
                @Html.LabelFor(model => model.Location, new {@class = "col-xs-2 col-sm-2 col-md-2 col-lg-2 b"})
                <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 b">
                    @Html.TextBoxFor(model=>model.Location[0].LocationName,new {@class="LocationInput form-control",@onfocus="searchLocation(this)",@id="Location-0"})
                    @Html.HiddenFor(model => model.Location[0].Longitude, new { @id = "Longitude-0" })
                    @Html.HiddenFor(model => model.Location[0].Latitude, new { @id = "Lattitude-0" })
                </div>
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
                    <button type="button" class="btn btn-primary d_btn_x" id="btnAddLocation">Add Location</button>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Location)
        </div>
    </div>
   @* <div class="row d_stream_cover b">
        <!-- row Streaming Link -->
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
        </div>
        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 b">
            @Html.DropDownList("Quality", new SelectList(ListResolutionItem, "Value", "Text"), new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.Quality)
        </div>

        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 b" id="LocationSelection">
            <select class="form-control" id="i_location_1" name="LocationLiveName"></select>
        </div>
        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 b">
            @Html.DropDownList("PrivacyYoutube", new SelectList(ListPrivacy, "Value", "Text"), new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.PrivacyYoutube)
        </div>
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
            
        </div>
        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 b">
            <div class="form-group">
                <div class="input-group date" id="dtpStartTimeYoutube" style="z-index: 2">
                    @Html.TextBoxFor(model => model.StartTimeYoutube, new { @type = "text", @class = "form-control", @placeholder = "Live Streaming Start From", @id = "i_start_time_youtube" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.StartTimeYoutube)
            </div>
        </div>
        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 b">
            <div class="form-group">
                <div class="input-group date" id="dtpEndTimeYoutube" style="z-index: 2">
                    @Html.TextBoxFor(model => model.EndTimeYoutube, new { @type = "text", @class = "form-control", @placeholder = "Live Streaming Start To", @id = "i_end_time_youtube" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.EndTimeYoutube)
            </div>
        </div>
    </div>*@
    <div class="row b">
        <!-- row Privacy -->
        @Html.LabelFor(model => model.Privacy, new {@class = "col-xs-2 col-sm-2 col-md-2 col-lg-2 b"})
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 b">
            @Html.DropDownList("Privacy", new SelectList(ListPrivacy, "Value", "Text"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Privacy)
        </div>
    </div>
    <div class="row b">
        <!-- row Description -->
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2 b">
            Description
        </div>
        <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 b">
            <div>
                <div id="alerts"></div>
                <div class="btn-toolbar" data-role="editor-toolbar" data-target="#editor">
                    <div class="btn-group">
                        <a class="btn dropdown-toggle btn-default" data-toggle="dropdown" title="Font">
                            <i class="icon-font"></i><b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu"></ul>
                    </div>
                    <div class="btn-group">
                        <a class="btn dropdown-toggle btn-default" data-toggle="dropdown" title="Font Size"><i class="icon-text-height"></i>&nbsp;<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a data-edit="fontSize 5">
                                    <font size="5">Huge</font>
                                </a>
                            </li>
                            <li>
                                <a data-edit="fontSize 3">
                                    <font size="3">Normal</font>
                                </a>
                            </li>
                            <li>
                                <a data-edit="fontSize 1">
                                    <font size="1">Small</font>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default" data-edit="bold" title="Bold (Ctrl/Cmd+B)">
                            <i class="icon-bold"></i>
                        </a>
                        <a class="btn btn-default" data-edit="italic" title="Italic (Ctrl/Cmd+I)">
                            <i class="icon-italic"></i>
                        </a>
                        <a class="btn btn-default" data-edit="strikethrough" title="Strikethrough">
                            <i class="icon-strikethrough"></i>
                        </a>
                        <a class="btn btn-default" data-edit="underline" title="Underline (Ctrl/Cmd+U)">
                            <i class="icon-underline"></i>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default" data-edit="insertunorderedlist" title="Bullet list">
                            <i class="icon-list-ul"></i>
                        </a>
                        <a class="btn btn-default" data-edit="insertorderedlist" title="Number list">
                            <i class="icon-list-ol"></i>
                        </a>
                        <a class="btn btn-default" data-edit="outdent" title="Reduce indent (Shift+Tab)">
                            <i class="icon-indent-left"></i>
                        </a>
                        <a class="btn btn-default" data-edit="indent" title="Indent (Tab)">
                            <i class="icon-indent-right"></i>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default" data-edit="justifyleft" title="Align Left (Ctrl/Cmd+L)">
                            <i class="icon-align-left"></i>
                        </a>
                        <a class="btn btn-default" data-edit="justifycenter" title="Center (Ctrl/Cmd+E)">
                            <i class="icon-align-center"></i>
                        </a>
                        <a class="btn btn-default" data-edit="justifyright" title="Align Right (Ctrl/Cmd+R)">
                            <i class="icon-align-right"></i>
                        </a>
                        <a class="btn btn-default" data-edit="justifyfull" title="Justify (Ctrl/Cmd+J)">
                            <i class="icon-align-justify"></i>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default dropdown-toggle" data-toggle="dropdown" title="Hyperlink">
                            <i class="icon-link"></i>
                        </a>
                        <div class="dropdown-menu input-append">
                            <input class="span2" placeholder="http://" type="text" data-edit="createLink"/>
                            <button class="btn btn-success" type="button">Add</button>
                        </div>
                        <a class="btn btn-default" data-edit="unlink" title="Remove Hyperlink">
                            <i class="icon-cut"></i>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default" title="Insert picture (or just drag & drop)" id="pictureBtn">
                            <i class="icon-picture"></i>
                        </a>
                        <input type="file" data-role="magic-overlay" data-target="#pictureBtn" data-edit="insertImage"/>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-default" data-edit="undo" title="Undo (Ctrl/Cmd+Z)">
                            <i class="icon-undo"></i>
                        </a>
                        <a class="btn btn-default" data-edit="redo" title="Redo (Ctrl/Cmd+Y)">
                            <i class="icon-repeat"></i>
                        </a>
                    </div>
                    <input type="text" data-edit="inserttext" id="voiceBtn" x-webkit-speech="">
                </div>
                <div id="editor" contenteditable="true">Enter your description</div>
                @Html.HiddenFor(model => model.Description, new { @id="event-description"})
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnSubmit" class="btn btn-default" value="Create"/>
            @Html.ActionLink("Cancel", "Index", "Home",null, new { @class = "btn btn-default" })
        </div>

    </div>
    </div>
}
</div>
</div>
</div>
</div>
</div>
<!-- All script here -->
<!-- Default JQuery -->
<script src="~/Scripts/Event/jquery.hotkeys.js"></script>
<script src="~/Scripts/Event/bootstrap-wysiwyg.js"></script>
<!-- Plugin chọn giờ -->
<script src="~/Scripts/Event/moment.js"></script>
<script src="~/Scripts/Event/prettify-1.0.min.js"></script>
<script src="~/Scripts/Event/Create.js"></script>
<script src="~/Scripts/Event/jquery.m.flip.js"></script>
<script src="~/Scripts/Event/bootstrap-datetimepicker.min.js"></script>
<script>
    //Location Map
    var autocomplete = "";
    var number = "";
    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.Req
        autocomplete = new google.maps.places.Autocomplete(
        (document.getElementById('Location-' + number)),
        { types: [] });

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', getCoordinates);
    }

    // [START region_fillform]
    function getCoordinates() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        document.getElementById('Longitude-' + number).value = place.geometry.location.lng();
        document.getElementById('Lattitude-' + number).value = place.geometry.location.lat();
        //$("#i_location_1").empty();
        //$('[id^=Location-]').each(function (i, item) {
        //    var x = $(item).val();
        //    if (x.toString() != "Remove Location")
        //        $("#i_location_1").append(new Option($(item).val(), $(item).val(), true, true));
        //});
    }

    function searchLocation(x) {
        var LocationID = $(x).attr('id');
        number = LocationID.substring(9, 10);
        initAutocomplete();
    }
</script>