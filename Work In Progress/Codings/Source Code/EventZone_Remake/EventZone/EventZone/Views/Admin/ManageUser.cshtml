@using EventZone.Models
@using EventZone.Helpers
@model IEnumerable<EventZone.Models.User>
@{
    User admin = UserHelpers.GetCurrentAdmin(Session);
    if (admin == null)
    {
        Response.Redirect("~/Admin");
    }
    ViewBag.Title = "ManageUser";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    List<User> allUser = Model.ToList() as List<User>;
}

<div class="modal fade d_modal" id="add-new-user-modal" role="dialog">
    <div class="modal-dialog" style="margin-top: 120px; width: 30%;">
        <!-- Modal content-->
        <div class="panel panel-info d_margin_top">
            <div class="panel-heading">
                <div class="panel-title">Add new user</div>
                <div style="float: right; font-size: 80%; position: relative; top: -17px">
                    <a href="#" data-dismiss="modal" id="i_close_modal">Close</a>
                </div>
            </div>
            @Html.Action("AddNewUser", "Admin")
        </div>
    </div>
</div>



<div class="modal fade d_modal" id="change-email-modal" role="dialog">
    <div class="modal-dialog" style="margin-top: 120px; width: 30%;">
        <!-- Modal content-->
        <div class="panel panel-info d_margin_top">
            <div class="panel-heading">
                <div class="panel-title">Change Email</div>
                <div style="float: right; font-size: 80%; position: relative; top: -17px">
                    <a href="#" data-dismiss="modal" id="i_close_modal">Close</a>
                </div>
            </div>
            <div style="padding-top: 10px" class="panel-body">
                <div id="ChangeEmailError"></div>
                <div class="cover_all_functions" style="text-align: -webkit-center;">
                    <p>Enter new e-mail:</p>
                    <div style="margin-bottom: 15px" class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        <input type="text" name="newEmail" id="newEmail">
                    </div>
                </div>
                <input hidden id="target-user-ID">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" class="btn btn-success" id="change-email-submit" onclick="changeEmailPost()" value="Save"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" class="interactButton" style="margin-left: 5%;margin-bottom:10px">
    <button class="btn btn-success" type="submit" id="btn-add-user">
        Add New User
    </button>
    <input type="text" name="Keyword" id="Keyword" class="form-control" aria-label="Text input with segmented button dropdown" placeholder="Search for user or role" style="width: 250px;display:inline-block">
    <button class="btn btn-default" type="submit">
        <span class="glyphicon glyphicon-search"></span>
    </button>
    </div>
@if (allUser != null && allUser.Count != 0)
{
    for (int i = 0; i < allUser.Count; i++)
    {
        User user = allUser[i];
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 d_user_card_cover">
            <!-- e_ để đánh dấu CSS EVENT -->
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-2 d_u_thumb">
                <img src="@EventDatabaseHelper.Instance.GetImageByID(user.Avartar).ImageLink">
            </div>
            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-10 d_u_info_cover">
                <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9 d_u_title">
                    @Html.ActionLink(UserDatabaseHelper.Instance.GetUserDisplayName(user.UserID), "Index", "User", new {userID = user.UserID}, new {target = "_blank"})
                </div>
                @if (user.UserRoles != EventZoneConstants.RootAdmin)
                {
                    <h4>
                        <div id="lock-icon-@user.UserID">
                        @if (user.AccountStatus == EventZoneConstants.Lock)
                        {
                            <span class="col-md-1 col-lg-1 label label-danger">
                                <span class=" glyphicon glyphicon-lock"></span>
                            </span>
                        }
                    </div>
                    </h4>
                }
                <h4>
                    @if (user.UserRoles == EventZoneConstants.Mod)
                    {
                        <span id="role-define-@user.UserID" class="col-md-1 col-lg-1 label label-primary" style="font-size:86%">Mod</span>
                    }
                    else if (user.UserRoles == EventZoneConstants.Admin)
                    {
                        <span id="role-define-@user.UserID" class="col-md-1 col-lg-1 label label-info" style="font-size:86%">Admin</span>
                    }
                    else if (user.UserRoles == EventZoneConstants.RootAdmin)
                    {
                        <span id="role-define-@user.UserID" class="col-md-2 col-lg-2 label label-danger" style="font-size:86%">Root Admin</span>
                    }
                    else
                    {
                        <span id="role-define-@user.UserID" class="col-md-1 col-lg-1 label label-success" style="font-size:86%">User</span>
                    }
                </h4>
                <div class="btn-group d_u_btn_more col-md-1 col-lg-1">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="glyphicon glyphicon-option-vertical"></span>
                    </button>
                    <ul class="dropdown-menu d_u_drop_menu" id="ul-lock-unlock-@user.UserID">
                        @if (user.AccountStatus == EventZoneConstants.Active)
                        {
                            <li><a href="#" id="lock-user-@user.UserID" onclick="LockUser(@user.UserID)">Lock</a></li>
                        }
                        else
                        {
                            <li><a href="#" id="unlock-user-@user.UserID" onclick="UnlockUser(@user.UserID)">Unlock</a></li>
                        }
                        <li><a href="#" onclick="ShowChangeEmailModal(@user.UserID)">Change Email</a></li>
                        @if (user.UserRoles != EventZoneConstants.Mod)
                        {
                            <li><a href="#" id="set-mod-@user.UserID" onclick="SetMod(@user.UserID)">Set Mod</a></li>
                        }
                        else if (user.UserRoles == EventZoneConstants.Mod)
                        {
                            <li><a href="#" id="unset-mod-@user.UserID" onclick="UnSetMod(@user.UserID)">UnSet Mod</a></li>
                        }
                        @if (user.UserRoles != EventZoneConstants.Admin && admin.UserRoles == EventZoneConstants.RootAdmin)
                        {
                            <li><a href="#" id="set-admin-@user.UserID" onclick="SetAdmin(@user.UserID)">Set Admin</a></li>
                        }
                        else if (user.UserRoles == EventZoneConstants.Admin && admin.UserRoles == EventZoneConstants.RootAdmin)
                        {
                            <li><a href="#" id="unset-mod-@user.UserID" onclick="UnSetAdmin(@user.UserID)">UnSet Admin</a></li>

                        }
                    </ul>
                </div>
                <div class="d_u_cate">
                    <i class="fa fa-font"></i>
                    <div class="d_fill_in">Number Event: <a href="@Url.Action("Event", "User", new { userID=user.UserID})"><i>@UserDatabaseHelper.Instance.CountOwnedEvent(user.UserID, true)</i></a></div>
                </div>
                <div class="d_u_follower">
                    <i class="fa fa-star"></i>
                    <div class="d_fill_in">Follower: <a href=""><i>@UserDatabaseHelper.Instance.NumberFollower(user.UserID)</i></a></div>
                </div>
                <div class="d_u_date">
                    <i class="fa fa-calendar-o"></i>
                    <div class="d_fill_in">Date Join: @user.DataJoin.ToShortDateString()</div>
                </div>
                <div class="d_u_time">
                    <i class="fa fa-clock-o"></i>
                    <div class="d_fill_in" id="email-display-@user.UserID">Email: @user.UserEmail</div>
                </div>

            </div>

        </div>
    }
}
<script>
    $("#btn-add-user").click(function () {

        $("#add-new-user-modal").modal("show");
    })

</script>
<script>
    function LockUser(userID) {
        $.ajax({
            url: "/Admin/LockUser",
            type: "POST",
            dataType: "json",
            data: { userID: userID },
            success: function (data) {
                if (data.state == 0) {
                    errorShow(data.error, data.message)
                } else {
                    $("#lock-icon-" + userID).empty();
                    $("#lock-icon-" + userID).prepend('<span class="col-md-1 col-lg-1 label label-danger"><span class=" glyphicon glyphicon-lock"></span></span>')
                    $("#lock-user-" + userID).remove();
                    $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unlock-user-' + userID + '" onclick="UnlockUser(' + userID + ')">Unlock</a></li>')
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThrown);
            }
        })
    }
    function UnlockUser(userID) {
        $.ajax({
            url: "/Admin/UnlockUser",
            type: "POST",
            dataType: "json",
            data: { userID: userID },
            success: function (data) {
                if (data.state == 0) {
                    errorShow(data.error, data.message)
                } else {
                    $("#lock-icon-" + userID).empty();
                    $("#unlock-user-" + userID).remove();
                    $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="lock-user-' + userID + '" onclick="LockUser(' + userID + ')">Lock</a></li>')
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThrown);
            }
        })
    }

    function ShowChangeEmailModal(userID) {
        $("#change-email-modal").modal("show");
        $("#target-user-ID").val(userID);
        $("#newEmail").val("");
        $("#ChangeEmailError").empty();
    }
    function changeEmailPost() {
        if ($("#target-user-ID").val() == null || isNaN($("#target-user-ID").val())) {
                alert("somthing wrong!")
        } else if ($("#newEmail").val() == null || $("#newEmail").val() == "") {
            $("#ChangeEmailError").empty();
            $("#ChangeEmailError").append("<p>Please enter new email!<p>");
        } else if (!checkEmail($("#newEmail").val())) {
            $("#ChangeEmailError").empty();
            $("#ChangeEmailError").append("<p>Wrong email format!<p>");
        } else {
            var userID = $("#target-user-ID").val();
            var newEmail= $("#newEmail").val();
            $.ajax({
                url: "/Admin/ChangeUserEmail",
                type: "POST",
                dataType: "json",
                data: { userID: userID, newEmail: newEmail },
                success: function (data) {
                    if (data.state == 0) {
                       $("#change-email-modal").modal("hide");
                       errorShow(data.error, data.message)
                    } else {
                        $("#change-email-modal").modal("hide");
                        $("#ChangeEmailError").empty();
                        $("#target-user-ID").val(null);
                        $("#newEmail").val(null);
                        $("#email-display-" + userID).empty();
                        $("#email-display-" + userID).append("<p>Email: "+data.newEmail+"</p>");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        }
    }

    function checkEmail(email){
        var filter=/^([\w-]+(?:\.[\w-]+)*)@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i
        if (filter.test(email))
            return true;
        else{
            return false;
        }
    }
    function SetMod(userID) {
        var r = confirm("Do you want to set this user to Mod?");
        if (r == true) {
            $.ajax({
                url: "/Admin/SetMod",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-"+ userID).empty();
                        $("#role-define-"+userID).append('<span id="role-define-'+userID+'" class="col-md-1 col-lg-1 label label-primary" style="font-size:86%">Mod</span>')
                        $("#set-mod-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unset-mod-' + userID + '" onclick="UnSetMod(' + userID + ')">UnSet Mod</a></li>')

                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function UnSetMod(userID) {
        var r = confirm("Do you want to set this Mod to User?");
        if (r == true) {
            $.ajax({
                url: "/Admin/UnSetMod",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('<span id="role-define-'+userID+'" class="col-md-1 col-lg-1 label label-success" style="font-size:86%">User</span>');
                        $("#unset-mod-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="set-mod-' + userID + '" onclick="SetMod(' + userID + ')">Set Mod</a></li>')
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function SetAdmin(userID) {
        var r = confirm("Do you want to set this user to Admin?");
        if (r == true) {
            $.ajax({
                url: "/Admin/SetAdmin",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('<div style="margin-bottom: 10px" class="input-group">' +
                            '<span class="input-group-addon" id="user-role-define-' + userID + '">Admin</span>' +
                        '</div>')
                        $("#set-admin-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unset-admin-' + userID + '" onclick="UnSetAdmin(' + userID + ')">UnSet Admin</a></li>');
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function UnSetAdmin(userID) {
        var r = confirm("Do you want to set this Admin to User?");
        if (r == true) {
            $.ajax({
                url: "/Admin/UnSetAdmin",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('');
                        $("#unset-admin-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="set-admin-' + userID + '" onclick="SetAdmin(' + userID + ')">Set Admin</a></li>')
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }


    $(window).scroll(function () {
        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {
            alert("near bottom!");
        }
    });

</script>
<script src="~/Scripts/Admin/ChangeUserEmail.js"></script>