@model EventZone.Models.LoginViewModel

@{
    const string loginPanelId = "loginPanelId";
    const string alertPanelId = "createAccountAlert";
    const string txtAccountName = "login-username";
    const string txtAccountPassword = "login-password";
}
<div id="i_signin_section" class="tab-pane fade in active">
    <section>
        @using (Ajax.BeginForm("Signin", "Account", null, new AjaxOptions
                            {
                                HttpMethod = "POST",
                                /*                                InsertionMode = InsertionMode.Replace,
                                                                UpdateTargetId = loginPanelId,*/
                                OnBegin = "OnSignInRequestBegan",
                                OnSuccess = "OnSignInRequestSucceeded",
                                OnFailure = "OnSignInRequestFailed",
                                OnComplete = "OnSignInRequestCompleted"
                            }, new { id = loginPanelId }))
        {
            @Html.AntiForgeryToken()
            var alertStyle = "";

            if (ViewData.ModelState == null || !ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                alertStyle = "display:none;";
            }
            <div id='@alertPanelId'
                 class="alert alert-danger"
                 style='@alertStyle'>
                @Html.ValidationSummary()
            </div>
                                <!-- bao toàn bộ chức năng SIGN IN, f_... để đánh dấu đó là Chức năng-->
            <div class="my_function_cover f_sign_in">
                <div style="padding-top: 30px" class="panel-body">
                    <div style="display: none" id="login-alert" class="alert alert-danger col-sm-12"></div>
                        <div style="margin-bottom: 15px" class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = txtAccountName, placeholder = "Username or Email" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>

                        <div style="margin-bottom: 15px" class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = txtAccountPassword, placeholder = "password" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>

                        <a data-toggle="modal" href="#myModal3" id="i_quen_mk">
                            Forget password?
                        </a>

                        <div class="input-group" style="margin-bottom: 35px">
                            <div class="checkbox">
                                <label>
                                    <input id="login-remember" type="checkbox" name="remember" value="1"> Remember me
                                </label>
                            </div>
                        </div>

                        <div style="margin-top: 10px" class="form-group">
                            <!-- Button -->
                            <div class="col-sm-12 controls">
                                <input type="submit" value="Sign in" class="btn btn-success" id="btn-login" />
                                <a id="btn-fblogin" href="#" class="btn btn-danger">Sign In with Google+</a>
                            </div>
                        </div>
                </div>
            </div><!-- bao toàn bộ chức năng SIGN IN -->
        }
    </section>
</div>
<script>
    $('#@loginPanelId').submit(function (event) {
        @*Validate form.*@
        var isValidForm = $('#@loginPanelId').validate().form();


        @*Form is invalid.*@
        if (!isValidForm) {

            @*Prevent this form from being submitted*@
            event.preventDefault();

            @*Display error panel*@
            $('#@alertPanelId').show();

            return false;
        }

        return true;
    });

    function OnSignInRequestBegan() {
        console.log('This event is fired when a request is intended to be sent');
    }

    function OnSignInRequestSucceeded(data) {
        if (data.state === 1) {
            $('#myModal2').modal('toggle');
            $('#MenuLayout').load(location.href +"#MenuLayout");

        } else {
            $('#@alertPanelId').empty();
            $('#@alertPanelId').append("<p>Invalid username or password</p>");
            $('#@alertPanelId').show();
        }
        console.log('This event is fired when a request has been sent to server successfully');
        console.log(data);
    }

    function OnSignInRequestFailed() {
        console.log('This event is fired when any errors happen while request is being sent to server');
    }

    function OnSignInRequestCompleted() {
        console.log('No matter how request has been sent to server or not. This event is fired');
    }
</script>
