@model IEnumerable<EventZone.Models.Appeal>
@using EventZone.Models;
@using System.Data;
@using System.Data.Entity;
@using EventZone.AdminHelpers;
@{
    ViewBag.Title = "ManageAppeals";
}
@if (Session.Count != 0)
{


    User sessionvar = UserAdminHelpers.GetCurrentUser(Session);


    List<User> user  = DataHelper.GetUsersByKeyword(sessionvar.UserName);

    if (user[0].UserRoles == 2 || user[0].UserRoles == 3)
    {

<h2>Manage Appeals</h2>



    using (Html.BeginForm("SearchEvent", "AppealsAdmin"))
    {
        
    <p>

        Name event: @Html.TextBox("searchString")
    </p>
       

        <input type="submit" value="search" />
    }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AppealContent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppealStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SendDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ResultDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Event.EventName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AppealContent)
        </td>
        <td>
            @if (item.AppealStatus == 0)
            {
                @Html.Label("Pending")
            }
            else if (item.AppealStatus == 1)
            {
                @Html.Label("Approved")
            }
            else
            {
                @Html.Label("Rejected")
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SendDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ResultDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Event.EventName)
        </td>
        <td>
            @if (item.AppealStatus == 0)
            {
                using (Html.BeginForm("Approve", "AppealsAdmin"))
                {

                    @Html.HiddenFor(model => item.AppealID, new { @id = "AppealID", @Name = "AppealID" })
                    @Html.HiddenFor(model => user[0].UserID, new { @id = "AdminID", @Name = "AdminID" })

                    <input type="submit" value="Approve" />

                }
                using (Html.BeginForm("Reject", "AppealsAdmin"))
                {

                    @Html.HiddenFor(model => item.AppealID, new { @id = "AppealID", @Name = "AppealID" })

                    @Html.HiddenFor(model => user[0].UserID, new { @id = "AdminID", @Name = "AdminID" })

                    <input type="submit" value="Reject" />
                }
            }
            else if (item.AppealStatus == 1)
            {
                using (Html.BeginForm("Reject", "AppealsAdmin"))
                {

                    @Html.HiddenFor(model => item.AppealID, new { @id = "AppealID", @Name = "AppealID" })
                     @Html.HiddenFor(model => user[0].UserID, new { @id = "AdminID", @Name = "AdminID" })    


                    <input type="submit" value="Reject" />
                }

            }
            else
            {
                using (Html.BeginForm("Approve", "AppealsAdmin"))
                {

                    @Html.HiddenFor(model => item.AppealID, new { @id = "AppealID", @Name = "AppealID" })
                    @Html.HiddenFor(model => user[0].UserID, new { @id = "AdminID", @Name = "AdminID" })

                    <input type="submit" value="Approve" />

                }
            }
            @*@Html.ActionLink("Edit", "Edit", new { id=item.AppealID }) |
            @Html.ActionLink("Details", "Details", new { id=item.AppealID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.AppealID })*@
        </td>
    </tr>
}

</table>
    }


}

else
{
    <h2>Not found</h2>
}